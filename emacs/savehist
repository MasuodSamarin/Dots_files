;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(org-link--history empty-history woman-topic-history org-read-date-history yes-or-no-p-history minibuffer-history tmphist buffer-name-history extended-command-history evil-ex-history file-name-history))
(setq org-read-date-history '("   "))
(setq yes-or-no-p-history '("yes" "no" ":yes" "y"))
(setq minibuffer-history '("pagina de los creadores" "link a definicion" "link al doc" "/usr/bin/zsh" "company-racer" "ample" "solarized" "molokai" "paganini" "monochrome" "sensores sick" "solarized-dark" "ample-light" "ample-flat" "ample-theme" "zenburn" "zenburn-theme" "darktooth" "darktooth-theme" "dichromacy" "doom-themes" "dracula" "dracula-theme" "tao-yin" "tao-yang" "gruber-darker" "gruber-darker-theme" "planet" "planet-theme" "monochrome-theme" "molokai-theme" "minimal" "minimal-theme" "greymatters" "greymatters-theme" "firebelly" "firebelly-theme" "busybee" "busybee-theme" "boron" "boron-theme" "resultado" "PlantUML" "graphviz" "tabla con dias y horarios" "lista de tareas pendientes personales" "Lista de tareas pendientes de IACI" "Lista de tareas diarias" "lista de telefonos" "datos personales" "lista de mails" "algunos datos personales" "link" "org-bullets" "tao-theme" "paganini-theme" "cyberpunk" "tango" "tsdh-dark" "leuven" "misterioso" "solarized-light" "default" "wombat" "Proyecto Maquina" "formato de links en org-mode" "leyendo un csv en C" "respuesta de StackOverflow"))
(setq buffer-name-history '("TODO.org" "config.org" "dia_a_dia.org" "personal_tasks.org" "arrays_test.hs" "init.el" "main.rs" "*GNU Emacs*" "proyecto_maquina.org" "read_CSV.c" "resumen_Free_OSEK.org" "ejemplo_uso_recursos_en_interrupciones.oil" "init.vim" "*scratch*" "mails.org" "dia_dia_todos.org"))
(setq extended-command-history '("rust-run" "term" "package-list-packages" "toggle-truncate-lines" "package-install" "package-menu-mark-upgrades" "load-theme" "comment-box" "comment-region" "uncomment-region" "org-update-statistics-cookies" "what-line_only_number" "what-line" "org-store-link" "artist-mode" "what-cursor-position"))
(setq evil-ex-history '(#("e ~/Dropbox/Org_mode_files/Personal_org_mode_files/TODO.org" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27) 27 28 (ex-index 28) 28 29 (ex-index 29) 29 30 (ex-index 30) 30 31 (ex-index 31) 31 32 (ex-index 32) 32 33 (ex-index 33) 33 34 (ex-index 34) 34 35 (ex-index 35) 35 36 (ex-index 36) 36 37 (ex-index 37) 37 38 (ex-index 38) 38 39 (ex-index 39) 39 40 (ex-index 40) 40 41 (ex-index 41) 41 42 (ex-index 42) 42 43 (ex-index 43) 43 44 (ex-index 44) 44 45 (ex-index 45) 45 46 (ex-index 46) 46 47 (ex-index 47) 47 48 (ex-index 48) 48 49 (ex-index 49) 49 50 (ex-index 50) 50 51 (ex-index 51) 51 52 (ex-index 52) 52 53 (ex-index 53) 53 54 (ex-index 54) 54 55 (ex-index 55) 55 56 (ex-index 56) 56 57 (ex-index 57) 57 58 (ex-index 58) 58 59 (ex-index 59)) #("q" 0 1 (ex-index 1)) #("e ~/Repos/tensortrade/tensortrade/feed/core/base.py" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27) 27 28 (ex-index 28) 28 29 (ex-index 29) 29 30 (ex-index 30) 30 31 (ex-index 31) 31 32 (ex-index 32) 32 33 (ex-index 33) 33 34 (ex-index 34) 34 35 (ex-index 35) 35 36 (ex-index 36) 36 37 (ex-index 37) 37 38 (ex-index 38) 38 39 (ex-index 39) 39 40 (ex-index 40) 40 41 (ex-index 41) 41 42 (ex-index 42) 42 43 (ex-index 43) 43 44 (ex-index 44) 44 45 (ex-index 45) 45 46 (ex-index 46) 46 47 (ex-index 47) 47 48 (ex-index 48) 48 49 (ex-index 49) 49 50 (ex-index 50) 50 51 (ex-index 51)) #("e ~/.emacs.d/config.org" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23)) #("e ~/Repos/Remember/Org-mode/remember_org_mode.org" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27) 27 28 (ex-index 28) 28 29 (ex-index 29) 29 30 (ex-index 30) 30 31 (ex-index 31) 31 32 (ex-index 32) 32 33 (ex-index 33) 33 34 (ex-index 34) 34 35 (ex-index 35) 35 36 (ex-index 36) 36 37 (ex-index 37) 37 38 (ex-index 38) 38 39 (ex-index 39) 39 40 (ex-index 40) 40 41 (ex-index 41) 41 42 (ex-index 42) 42 43 (ex-index 43) 43 44 (ex-index 44) 44 45 (ex-index 45) 45 46 (ex-index 46) 46 47 (ex-index 47) 47 48 (ex-index 48) 48 49 (ex-index 49)) #("e Dropbox/Org_mode_files/Personal_org_mode_files/TODO.org" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27) 27 28 (ex-index 28) 28 29 (ex-index 29) 29 30 (ex-index 30) 30 31 (ex-index 31) 31 32 (ex-index 32) 32 33 (ex-index 33) 33 34 (ex-index 34) 34 35 (ex-index 35) 35 36 (ex-index 36) 36 37 (ex-index 37) 37 38 (ex-index 38) 38 39 (ex-index 39) 39 40 (ex-index 40) 40 41 (ex-index 41) 41 42 (ex-index 42) 42 43 (ex-index 43) 43 44 (ex-index 44) 44 45 (ex-index 45) 45 46 (ex-index 46) 46 47 (ex-index 47) 47 48 (ex-index 48) 48 49 (ex-index 49) 49 50 (ex-index 50) 50 51 (ex-index 51) 51 52 (ex-index 52) 52 53 (ex-index 53) 53 54 (ex-index 54) 54 55 (ex-index 55) 55 56 (ex-index 56) 56 57 (ex-index 57)) #("! cd Repos/A-star-algorithm-rust/" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27) 27 28 (ex-index 28) 28 29 (ex-index 29) 29 30 (ex-index 30) 30 31 (ex-index 31) 31 32 (ex-index 32) 32 33 (ex-index 33)) #("e src/transformations.jl" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24)) #("cd Repos/Robotics" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17)) #("e .emacs.d/config.org" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21)) #("e Dropbox/Org_mode_files/Personal_org_mode_files/lalala.txt.gpg" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20) 20 21 (ex-index 21) 21 22 (ex-index 22) 22 23 (ex-index 23) 23 24 (ex-index 24) 24 25 (ex-index 25) 25 26 (ex-index 26) 26 27 (ex-index 27) 27 28 (ex-index 28) 28 29 (ex-index 29) 29 30 (ex-index 30) 30 31 (ex-index 31) 31 32 (ex-index 32) 32 33 (ex-index 33) 33 34 (ex-index 34) 34 35 (ex-index 35) 35 36 (ex-index 36) 36 37 (ex-index 37) 37 38 (ex-index 38) 38 39 (ex-index 39) 39 40 (ex-index 40) 40 41 (ex-index 41) 41 42 (ex-index 42) 42 43 (ex-index 43) 43 44 (ex-index 44) 44 45 (ex-index 45) 45 46 (ex-index 46) 46 47 (ex-index 47) 47 48 (ex-index 48) 48 49 (ex-index 49) 49 50 (ex-index 50) 50 51 (ex-index 51) 51 52 (ex-index 52) 52 53 (ex-index 53) 53 54 (ex-index 54) 54 55 (ex-index 55) 55 56 (ex-index 56) 56 57 (ex-index 57) 57 58 (ex-index 58) 58 59 (ex-index 59) 59 60 (ex-index 60) 60 61 (ex-index 61) 61 62 (ex-index 62) 62 63 (ex-index 63)) #("vsplit term" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11)) #("e arrays_test.hs" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16)) #("cd" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("term" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("e bang_bang.hs" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14)) #("e ~/.emacs.d/init.el" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18) 18 19 (ex-index 19) 19 20 (ex-index 20)) #("e src/main.rs" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13)) #("cargo-process-run" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17)) #("e src/lib.rs" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12)) #("cd Repos" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8)) #("se nowrap" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9)) #("e src/matrix4x4.rs" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8) 8 9 (ex-index 9) 9 10 (ex-index 10) 10 11 (ex-index 11) 11 12 (ex-index 12) 12 13 (ex-index 13) 13 14 (ex-index 14) 14 15 (ex-index 15) 15 16 (ex-index 16) 16 17 (ex-index 17) 17 18 (ex-index 18)) #("w" 0 1 (ex-index 1)) #("cd ~/Dev" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6) 6 7 (ex-index 7) 7 8 (ex-index 8)) #("sl;dkfjasdlk" 0 1 (line-prefix #(":" 0 1 (font-lock-face minibuffer-prompt)) ex-index 1) 1 2 (line-prefix #(":" 0 1 (font-lock-face minibuffer-prompt)) ex-index 2) 2 3 (line-prefix #(":" 0 1 (font-lock-face minibuffer-prompt)) ex-index 3) 3 4 (line-prefix #(":" 0 1 (font-lock-face minibuffer-prompt)) ex-index 4) 4 5 (line-prefix #(":" 0 1 (font-lock-face minibuffer-prompt)) ex-index 5) 5 6 (line-prefix #(":" 0 1 (font-lock-face minibuffer-prompt)) ex-index 6) 6 7 (line-prefix #(":" 0 1 (font-lock-face minibuffer-prompt)) ex-index 7) 7 8 (line-prefix #(":" 0 1 (font-lock-face minibuffer-prompt)) ex-index 8) 8 9 (line-prefix #(":" 0 1 (font-lock-face minibuffer-prompt)) ex-index 9) 9 10 (line-prefix #(":" 0 1 (font-lock-face minibuffer-prompt)) ex-index 10) 10 11 (line-prefix #(":" 0 1 (font-lock-face minibuffer-prompt)) ex-index 11) 11 12 (line-prefix #(":" 0 1 (font-lock-face minibuffer-prompt)) ex-index 12)) #("bd" 0 1 (ex-index 1) 1 2 (ex-index 2))))
(setq file-name-history '("~/Dropbox/Org_mode_files/Personal_org_mode_files/TODO.org" "~/Repos/A-star-algorithm-rust/" "~/Repos/Robotics/" "~/Dev/Haskell_play/arrays_test.hs" "~/Dropbox/TODO_12_08.org" "~/.emacs.d/config.org" "~/Dev/Haskell_play/" "~/.emacs.d/init.el" "~/.emacs.d/custom.el" "~/Repos/retina/src/lib.rs" "~/Repos/Haskell_work/" "~/Repos/Remember/Haskell/remember_haskell.org" "~/Repos/darknet/" "~/Repos/huffman-rs/" "~/Repos/huffman-rs/src/main.rs" "~/Repos/robotics-zero/" "~/Repos/robotics-zero" "~/Repos/robotics-zero/src/lib.rs" "~/Dev/Rust_play/image-processing-test/src/" "~/Dev/Rust_play/image-processing-test/src/main.rs" "~/Dev" "~/Repos/Rust_work/mandelbrot-set/src/main.rs" "~/Dev/Rust_play/array_test/src/main.rs" "~/Dev/Rust_play/array_test/" "~/Dropbox/Org_mode_files/Personal_org_mode_files/lalala.txt.gpg" "~/Dropbox/Proyectos/Proyecto_Maquina/Presupuesto/sensores_a_utilizar.csv" "~/C_work/read_CSV.c" "~/Dropbox/Proyectos/Proyecto_Maquina/Embedded/Tasks/Tasks_diagram_generation/states.txt" "~/Dropbox/Org_mode_files/Programacion_org_mode_files/Python/ejemplo_de_tablas_panda.org" "~/Dropbox/TODO.org" "~/.config/nvim/init.vim" "~/.emacs.d/config.p" "~/C_work/factorial.c" "~/C_work/simple_compressor_RLE.c"))
(setq kill-ring '("https://www.epfl.ch/labs/ivrl/research/slic-superpixels/" #("
" 0 1 (fontified t yank-handler (evil-yank-line-handler))) #("*** TODO 
" 0 2 (keymap (keymap (mouse-1 . org-cycle) (mouse-2 lambda (e) (interactive "e") (mouse-set-point e) (org-cycle))) face (:foreground "#fdf6e3") org-todo-head "TODO" fontified t yank-handler (evil-yank-line-handler)) 2 3 (face org-level-3 keymap (keymap (mouse-1 . org-cycle) (mouse-2 lambda (e) (interactive "e") (mouse-set-point e) (org-cycle))) composition (2 1 [10040]) org-todo-head "TODO" fontified t yank-handler (evil-yank-line-handler)) 3 4 (face org-level-3 keymap (keymap (mouse-1 . org-cycle) (mouse-2 lambda (e) (interactive "e") (mouse-set-point e) (org-cycle))) org-todo-head "TODO" fontified t yank-handler (evil-yank-line-handler)) 4 8 (face org-todo org-todo-head "TODO" fontified t yank-handler (evil-yank-line-handler)) 8 9 (face org-level-3 org-todo-head "TODO" fontified t yank-handler (evil-yank-line-handler)) 9 10 (fontified t yank-handler (evil-yank-line-handler))) #("(no se
	bien si es esto eh porque como vamos a ver tiene un ~yield~)" 0 7 (fontified t) 7 60 (fontified t) 60 67 (org-emphasis t font-lock-multiline t face (org-code) fontified t) 67 68 (fontified t)) #("       Que es un ~Stream~???: 
" 0 17 (yank-handler (evil-yank-line-handler) fontified t) 17 25 (yank-handler (evil-yank-line-handler) fontified t face (org-code) font-lock-multiline t org-emphasis t) 25 30 (yank-handler (evil-yank-line-handler) fontified t) 30 31 (yank-handler (evil-yank-line-handler) fontified t)) #("`" 0 1 (fontified t)) #("hacer" 0 5 (fontified t)) #("****** 
" 0 5 (yank-handler (evil-yank-line-handler) fontified t face (:foreground "#fdf6e3") keymap (keymap (mouse-1 . org-cycle) (mouse-2 lambda (e) (interactive "e") (mouse-set-point e) (org-cycle)))) 5 6 (yank-handler (evil-yank-line-handler) fontified t composition (1 1 [9675]) keymap (keymap (mouse-1 . org-cycle) (mouse-2 lambda (e) (interactive "e") (mouse-set-point e) (org-cycle))) face org-level-6) 6 7 (yank-handler (evil-yank-line-handler) fontified t keymap (keymap (mouse-1 . org-cycle) (mouse-2 lambda (e) (interactive "e") (mouse-set-point e) (org-cycle))) face org-level-6) 7 8 (yank-handler (evil-yank-line-handler) fontified t)) #("
" 0 1 (yank-handler (evil-yank-line-handler) fontified t)) #("
" 0 1 (yank-handler (evil-yank-line-handler) fontified t)) "/home/elsuizo/Repos/tensortrade/tensortrade/feed/core/base.py::103" "A class responsible for creating the inputs necessary to work in a
    `DataFeed`.
" "Stream" "A class providing a context in which to create names.

    This becomes useful in cases where `Named` object would like to use the
    same name in a different context. In order to resolve naming conflicts in
    a `DataFeed`, this class provides a way to solve it." "NameSpace" #("******** 
" 0 7 (keymap (keymap (mouse-1 . org-cycle) (mouse-2 lambda (e) (interactive "e") (mouse-set-point e) (org-cycle))) face (:foreground "#fdf6e3") fontified t yank-handler (evil-yank-line-handler)) 7 8 (face org-level-8 keymap (keymap (mouse-1 . org-cycle) (mouse-2 lambda (e) (interactive "e") (mouse-set-point e) (org-cycle))) fontified t yank-handler (evil-yank-line-handler)) 8 9 (face org-level-8 keymap (keymap (mouse-1 . org-cycle) (mouse-2 lambda (e) (interactive "e") (mouse-set-point e) (org-cycle))) fontified t yank-handler (evil-yank-line-handler)) 9 10 (fontified t yank-handler (evil-yank-line-handler))) "A class for controlling the naming of objects.

    The purpose of this class is to control the naming of objects with respect
    to the `NameSpace` to which they belong to. This prevents conflicts that
    arise in the naming of similar objects under different contexts." "Named" "if inspect.isgeneratorfunction(source):" #("que creo que sirve para tener acceso a los metodos esos que tienen ~__doc__~ por ejemplo" 0 67 (fontified t) 67 76 (fontified t face (org-code) font-lock-multiline t org-emphasis t) 76 88 (fontified t)) "https://docs.python.org/3/library/inspect.html" #("	A
" 0 2 (fontified t yank-handler (evil-yank-line-handler)) 2 3 (fontified t yank-handler (evil-yank-line-handler))) #("#+TITLE: elsuizo emacs configuratiojia\"
user-mail-address \"mnoblia@disroot.org\")
" 0 8 (face org-document-info-keyword fontified t font-lock-fontified t yank-handler (evil-yank-line-handler)) 8 9 (fontified t yank-handler (evil-yank-line-handler)) 9 40 (face org-document-title fontified t font-lock-fontified t yank-handler (evil-yank-line-handler)) 40 81 (fontified t yank-handler (evil-yank-line-handler))) #("#TITLE: elsuizo TODOS
#+AUTHOR: elsuizo
#+EMAIL: mnoblia@disroot.org
" 0 22 (fontified t yank-handler (evil-yank-line-handler)) 22 31 (face org-document-info-keyword fontified t font-lock-fontified t yank-handler (evil-yank-line-handler)) 31 32 (fontified t yank-handler (evil-yank-line-handler)) 32 40 (face org-document-info fontified t font-lock-fontified t yank-handler (evil-yank-line-handler)) 40 48 (face org-document-info-keyword fontified t font-lock-fontified t yank-handler (evil-yank-line-handler)) 48 49 (fontified t yank-handler (evil-yank-line-handler)) 49 69 (face org-document-info fontified t font-lock-fontified t yank-handler (evil-yank-line-handler))) #("#+end_src
" 0 9 (face org-meta-line fontified t font-lock-fontified t yank-handler (evil-yank-line-handler)) 9 10 (fontified t yank-handler (evil-yank-line-handler))) #("
" 0 1 (yank-handler (evil-yank-line-handler))) #("
" 0 1 (yank-handler (evil-yank-line-handler))) #("   c = α - π
" 0 7 (yank-handler (evil-yank-line-handler) fontified t) 7 11 (yank-handler (evil-yank-line-handler) fontified t) 11 12 (yank-handler (evil-yank-line-handler) fontified t) 12 13 (yank-handler (evil-yank-line-handler) fontified t)) #("
" 0 1 (yank-handler (evil-yank-line-handler))) #("function piola(m::AbstractArray{T}) where T<:Real
" 0 8 (yank-handler (evil-yank-line-handler) face font-lock-keyword-face fontified t) 8 9 (yank-handler (evil-yank-line-handler) fontified t) 9 14 (yank-handler (evil-yank-line-handler) face font-lock-function-name-face fontified t) 14 16 (yank-handler (evil-yank-line-handler) fontified t) 16 18 (yank-handler (evil-yank-line-handler) face default fontified t) 18 31 (yank-handler (evil-yank-line-handler) face font-lock-type-face fontified t) 31 33 (yank-handler (evil-yank-line-handler) fontified t) 33 34 (yank-handler (evil-yank-line-handler) fontified t) 34 36 (yank-handler (evil-yank-line-handler) fontified t) 36 41 (yank-handler (evil-yank-line-handler) face font-lock-keyword-face fontified t) 41 43 (yank-handler (evil-yank-line-handler) fontified t) 43 45 (yank-handler (evil-yank-line-handler) face default fontified t) 45 49 (yank-handler (evil-yank-line-handler) face font-lock-type-face fontified t) 49 50 (yank-handler (evil-yank-line-handler))) #("    s == (4, 4) || s == (3, 3) || throw(DimensionMismatch(\"The matrix must be \"))
" 0 9 (yank-handler (evil-yank-line-handler) fontified t) 9 14 (yank-handler (evil-yank-line-handler) fontified t) 14 24 (yank-handler (evil-yank-line-handler) fontified t) 24 29 (yank-handler (evil-yank-line-handler) fontified t) 29 39 (yank-handler (evil-yank-line-handler) fontified t) 39 57 (yank-handler (evil-yank-line-handler) fontified t) 57 58 (yank-handler (evil-yank-line-handler) fontified t) 58 79 (yank-handler (evil-yank-line-handler) face font-lock-string-face fontified t) 79 80 (yank-handler (evil-yank-line-handler) fontified t) 80 81 (yank-handler (evil-yank-line-handler) fontified t) 81 82 (yank-handler (evil-yank-line-handler))) #("# lo que pasa es que este emacs anda mas piola que neovim bo
" 0 2 (yank-handler (evil-yank-line-handler) fontified t face font-lock-comment-delimiter-face) 2 60 (yank-handler (evil-yank-line-handler) fontified t face font-lock-comment-face) 60 61 (yank-handler (evil-yank-line-handler) fontified t face font-lock-comment-face)) "ig1Raicoe2toopohzuecheiz9luiqu8ia3fei" #(" " 0 1 (font-lock-face default fontified t)) #(" " 0 1 (font-lock-face default fontified t)) #(" " 0 1 (font-lock-face default fontified t)) #(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) #("(load-theme 'solarized t)
" 0 26 (face (org-block) font-lock-multiline t src-block t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler))) #("#+end_src
" 0 9 (face org-block-end-line font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler)) 9 10 (face org-block-end-line fontified t yank-handler (evil-yank-line-handler))) #("
" 0 1 (rear-nonsticky t fontified t yank-handler (evil-yank-line-handler))) #("#+begin_src emacs-lisp
" 0 22 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler)) 22 23 (face org-block-begin-line font-lock-multiline t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler))) #("
" 0 1 (rear-nonsticky t fontified t yank-handler (evil-yank-line-handler))) #("#+end_src
" 0 9 (face org-block-end-line font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler)) 9 10 (face org-block-end-line fontified t yank-handler (evil-yank-line-handler))) #("#+begin_src emacs-lisp
" 0 22 (fontified t font-lock-fontified t yank-handler (evil-yank-line-handler)) 22 23 (fontified t yank-handler (evil-yank-line-handler))) #("#+begin_src emacs-lisp
" 0 22 (face org-block-begin-line font-lock-multiline t font-lock-fontified t fontified t yank-handler (evil-yank-line-handler)) 22 23 (face org-block-begin-line font-lock-multiline t help-echo nil font-lock-fontified t fontified t yank-handler (evil-yank-line-handler))) #("
" 0 1 (rear-nonsticky t fontified t yank-handler (evil-yank-line-handler))) #("(require 'rust-mode)
(define-key rust-mode-map (kbd \"TAB\") #'company-indent-or-complete-common)
(setq company-tooltip-align-annotations t)
" 0 1 (fontified t yank-handler (evil-yank-line-handler)) 1 8 (face font-lock-keyword-face fontified t yank-handler (evil-yank-line-handler)) 8 10 (fontified t yank-handler (evil-yank-line-handler)) 10 19 (face font-lock-constant-face fontified t yank-handler (evil-yank-line-handler)) 19 52 (fontified t yank-handler (evil-yank-line-handler)) 52 57 (face font-lock-string-face fontified t yank-handler (evil-yank-line-handler)) 57 97 (fontified t yank-handler (evil-yank-line-handler)) 97 101 (face font-lock-keyword-face fontified t yank-handler (evil-yank-line-handler)) 101 139 (fontified t yank-handler (evil-yank-line-handler))) #("
" 0 1 (yank-handler (evil-yank-line-handler))) #("(require 'rust-mode)
(define-key rust-mode-map (kbd \"TAB\") #'company-indent-or-complete-common)
(setq company-tooltip-align-annotations t)
" 0 1 (fontified t yank-handler (evil-yank-line-handler)) 1 8 (face font-lock-keyword-face fontified t yank-handler (evil-yank-line-handler)) 8 10 (fontified t yank-handler (evil-yank-line-handler)) 10 19 (face font-lock-constant-face fontified t yank-handler (evil-yank-line-handler)) 19 52 (fontified t yank-handler (evil-yank-line-handler)) 52 57 (face font-lock-string-face fontified t yank-handler (evil-yank-line-handler)) 57 97 (fontified t yank-handler (evil-yank-line-handler)) 97 101 (face font-lock-keyword-face fontified t yank-handler (evil-yank-line-handler)) 101 139 (fontified t yank-handler (evil-yank-line-handler))) #("
" 0 1 (yank-handler (evil-yank-line-handler))) #("
" 0 1 (fontified t yank-handler (evil-yank-line-handler))) #("
" 0 1 (rear-nonsticky t fontified t yank-handler (evil-yank-line-handler))) #("
" 0 1 (rear-nonsticky t fontified t yank-handler (evil-yank-line-handler))) #("
" 0 1 (yank-handler (evil-yank-line-handler))) #("
(require 'rust-mode)
(define-key rust-mode-map (kbd \"TAB\") #'company-indent-or-complete-common)
(setq company-tooltip-align-annotations t)
" 0 2 (fontified t yank-handler (evil-yank-line-handler)) 2 9 (face font-lock-keyword-face fontified t yank-handler (evil-yank-line-handler)) 9 11 (fontified t yank-handler (evil-yank-line-handler)) 11 20 (face font-lock-constant-face fontified t yank-handler (evil-yank-line-handler)) 20 53 (fontified t yank-handler (evil-yank-line-handler)) 53 58 (face font-lock-string-face fontified t yank-handler (evil-yank-line-handler)) 58 98 (fontified t yank-handler (evil-yank-line-handler)) 98 102 (face font-lock-keyword-face fontified t yank-handler (evil-yank-line-handler)) 102 140 (fontified t yank-handler (evil-yank-line-handler))) #(" " 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (org-block))) #(";" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) #(";" 0 1 (fontified t font-lock-fontified t help-echo nil src-block t font-lock-multiline t face (font-lock-comment-delimiter-face org-block))) #("  
" 0 3 (fontified t yank-handler (evil-yank-line-handler))) #("
" 0 1 (yank-handler (evil-yank-line-handler) fontified t rear-nonsticky t font-lock-fontified t font-lock-multiline t face (org-block) help-echo nil src-block t))))
(setq search-ring '("julia-mode" "haskell-mode" "julia" "nerdtree" "evil" "racer" "rust-mode" "blackbo" "virtualenvw"))
(setq regexp-search-ring '(#("superpixels" 0 11 (isearch-case-fold-search t)) #("Super" 0 5 (isearch-case-fold-search nil)) #("SLIC" 0 4 (isearch-case-fold-search nil)) #("\\<DataFeed\\>" 0 12 (isearch-case-fold-search nil)) #("Stream" 0 6 (isearch-case-fold-search nil)) #("ABC" 0 3 (isearch-case-fold-search nil)) #("typ" 0 3 (isearch-case-fold-search t)) #("jjjj" 0 4 (isearch-case-fold-search t)) "sol" "config" "evil" "pytho" "?"))
